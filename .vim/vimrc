let s:coc_enable = 1

" vim-plug {{{
call plug#begin('~/.vim/plugged')

Plug 'mengelbrecht/lightline-bufferline'
Plug 'tpope/vim-surround'
if !has("gui_macvim")
    Plug 'jiangmiao/auto-pairs'
endif
Plug 'roxma/nvim-ascript'
Plug 'neoclide/jsonc.vim'

" fern
Plug 'lambdalisue/fern.vim'
Plug 'lu5je0/fern-renderer-nerdfont.vim'
Plug 'lambdalisue/nerdfont.vim'
Plug 'lambdalisue/fern-hijack.vim'
Plug 'lambdalisue/glyph-palette.vim'

Plug 'yianwillis/vimcdoc'
Plug 'tpope/vim-commentary'
Plug 'honza/vim-snippets'
Plug 'mg979/vim-visual-multi'
Plug 'kana/vim-textobj-user'
Plug 'sgur/vim-textobj-parameter'
Plug 'kana/vim-textobj-entire'
Plug 'mhinz/vim-signify'
Plug 'voldikss/vim-translator'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'chr4/nginx.vim'
Plug 'lu5je0/vim-java-bytecode'
Plug 'vim-scripts/ReplaceWithRegister'

" Peekaboo extends " and @ in normal mode and <CTRL-R> in insert mode so you can see the contents of the registers.
Plug 'junegunn/vim-peekaboo'
Plug 'lu5je0/vim-terminal-help'
Plug 'skywind3000/asynctasks.vim'
Plug 'skywind3000/asyncrun.vim'
Plug 'elzr/vim-json'
Plug 'terryma/vim-expand-region'
Plug 'machakann/vim-highlightedyank'
Plug 'tommcdo/vim-exchange'
Plug 'Konfekt/FastFold'
Plug 'mbbill/undotree'
Plug 'liuchengxu/vim-which-key'
Plug 'lu5je0/vim-base64'

if !has("gui")
    Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}
endif

if s:coc_enable == 1
    Plug 'neoclide/coc.nvim', {'branch': 'release'}
else
    Plug 'ervandew/supertab'
endif

" save with sudo
if !has("win32")
    Plug 'lambdalisue/suda.vim'
endif

if !has("gui") && !has("mac")
    Plug 'brglng/vim-im-select'
endif
Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }

" 变量命名转换
Plug 'chiedo/vim-case-convert'

" Plug 'lilydjwg/colorizer'

Plug 'itchyny/lightline.vim'

" themes
Plug 'lu5je0/vim-one'
Plug 'gruvbox-community/gruvbox'
Plug 'hzchirs/vim-material'
Plug 'ayu-theme/ayu-vim'
Plug 'w0ng/vim-hybrid'
" Plug 'cocopon/lightline-hybrid.vim'
call plug#end()
" }}}

" runtime 加载.vim {{{
runtime settings.vim
runtime foldtext.vim
if has("win32")
    runtime escalt.vim
endif
runtime gvim.vim
runtime functions.vim
runtime plug-config/fern.vim
runtime plug-config/leaderf.vim
runtime plug-config/autoformat.vim
runtime plug-config/terminal.vim
runtime plug-config/lightline.vim

if s:coc_enable == 1
    runtime plug-config/coc.vim
endif
" }}}

" autocmd {{{
autocmd FileType vim setlocal foldmethod=marker
autocmd FileType * set formatoptions-=o
autocmd FileType json,xml,html,yaml setlocal tabstop=2 | setlocal shiftwidth=2 | setlocal softtabstop=2
autocmd BufNewFile,BufRead *.json setlocal filetype=jsonc

" 超过最大的文件大小后禁用语法高亮
augroup LargeFile
    " MB
    let g:LargeFile = 10
    autocmd BufReadPre * let f=getfsize(expand("<afile>")) | if f > g:LargeFile * 1024 * 1024 || f == -2 | call LargeFile() | endif
augroup END

" }}}

" vim-expand-region {{{
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)
" }}}

" vim-json {{{
let g:vim_json_syntax_conceal = 0
" }}}

" auto-paris {{{
let g:AutoPairs= {'(':')', '[':']', '{':'}',"'":"'",'"':'"', "`":"`", '```':'```', '"""':'"""', "'''":"'''"}
" }}}

" vim-textobj-parameter {{{
let g:vim_textobj_parameter_mapping = 'a'
" }}}

" delimitMate {{{
let g:delimitMate_expand_cr=1
" }}}

" supertab {{{
let g:SuperTabDefaultCompletionType = "<c-n>"
" }}}

" highlightedyank {{{
let g:highlightedyank_highlight_duration=300
" }}}

" toggle_terminal {{{

" set your favorite shell
if has("win32")
    let g:toggle_terminal#command = 'wsl'
else
    let g:toggle_terminal#command = ''
endif

" set terminal window position
" (see possible options at :help vertical)
let g:toggle_terminal#position = 'bo'

" }}}

" undotree {{{
let g:undotree_WindowLayout = 3
let g:undotree_SetFocusWhenToggle = 1
" }}}

" FastFold {{{
let g:markdown_folding = 1
let g:tex_fold_enabled = 1
let g:vimsyn_folding = 'af'
let g:xml_syntax_folding = 1
let g:javaScript_fold = 1
let g:sh_fold_enabled= 7
let g:ruby_fold = 1
let g:perl_fold = 1
let g:perl_fold_blocks = 1
let g:r_syntax_folding = 1
let g:rust_fold = 1
let g:php_folding = 1
" }}}

" alias {{{
command! Json set ft=json
command! Jp set ft=jproperties
command! Diff windo difft
command! Diffo windo diffo
" }}}

" 主题配置 {{{
colorscheme one
let g:lightline.colorscheme = 'one'
set bg=dark
" }}}

runtime mappings.vim
runtime im.vim
runtime whichkey.vim
runtime misc.vim
runtime runner.vim
