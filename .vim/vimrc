" windows gvim {{{
if has("win32")
    let g:python3_host_prog = $HOME . "/AppData/Local/Programs/Python/Python38/python.exe"
endif
" }}}

" vim-plug {{{
call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-surround'
Plug 'Raimondi/delimitMate'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'terryma/vim-multiple-cursors'
Plug 'kana/vim-textobj-user'
Plug 'sgur/vim-textobj-parameter'
Plug 'kana/vim-textobj-entire'
Plug 'mhinz/vim-signify'
Plug 'voldikss/vim-translator'
Plug 'Chiel92/vim-autoformat'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'chr4/nginx.vim'
Plug 'lu5je0/vim-java-bytecode'
Plug 'ervandew/supertab'
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'junegunn/vim-peekaboo'
Plug 'pakutoma/toggle-terminal'
Plug 'elzr/vim-json'

" Plug 'neoclide/coc.nvim', {'branch': 'release'}
" 自动弹出pop
" Plug 'vim-scripts/AutoComplPop'

" snipmate
Plug 'garbas/vim-snipmate'
Plug 'honza/vim-snippets'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'

" themes
Plug 'w0ng/vim-hybrid'
Plug 'joshdick/onedark.vim'
Plug 'rakr/vim-one'
Plug 'dracula/vim'
Plug 'morhetz/gruvbox'

call plug#end()
" }}}

" runtime 加载.vim {{{
runtime escalt.vim
runtime foldtext.vim
runtime keymap.vim
runtime gvim.vim
" }}}

" 常规设置 {{{
set mouse=a
set hlsearch " 高亮搜索结果
set ignorecase " 搜索时忽略大小写
set incsearch " 每输入一个字符就跳转到对应的结果
set noerrorbells " 关闭错误响声
set clipboard+=unnamed " 使用系统剪切板
set splitbelow " 默认在下侧分屏
set splitright " 默认在右侧分屏
set t_Co=256 " 开启256颜色支持
set nowrap " 默认不启用拆行
set autoindent
set number

set tabstop=2
set shiftwidth=2
set softtabstop=2

set expandtab
set encoding=utf8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,gbk,utf-16,big5,gb18030,ISO-8859,latin1
syntax on
set foldmethod=syntax
set foldlevelstart=99 " 打开文件默认不折叠

" make the backspace work like in most other programs
set backspace=indent,eol,start
" }}}

" airline {{{
" tab显示
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#show_splits = 0       " disables the buffer name that displays on the right of the tabline
let g:airline#extensions#tabline#show_tabs = 1
let g:airline#extensions#tabline#show_tab_nr = 1
let g:airline#extensions#tabline#show_tab_count = 0
let g:airline#extensions#tabline#tab_min_count = 2
let g:airline#extensions#tabline#show_tab_type = 0     " disables the weird ornage arrow on the tabline
let g:airline#extensions#tabline#show_close_button = 0

let g:airline_powerline_fonts=1

" 隐藏箭头
" let g:airline_left_sep = ''
" let g:airline_left_sep = ''
" let g:airline_right_sep = ''
" let g:airline_right_sep = ''
"
" }}}

" vim-json {{{
let g:vim_json_syntax_conceal = 0
" }}}

" vim-signify {{{
set updatetime=1000 " 设置vim更新时间，主要用于更新gitgutter
" }}}

" vim-textobj-parameter {{{
let g:vim_textobj_parameter_mapping = 'a'
" }}}

" delimitMate {{{
let g:delimitMate_expand_cr=1
" }}}

" 光标设置 {{{
" https://vim.fandom.com/wiki/Configuring_the_cursor
" 1 or 0 -> blinking block
" 2 solid block
" 3 -> blinking underscore
" 4 solid underscore
" Recent versions of xterm (282 or above) also support
" 5 -> blinking vertical bar
" 6 -> solid vertical bar

if has("win32")
    if &term =~ '^xterm'
        " normal mode
        let &t_EI .= "\<Esc>[8 q"
        " insert mode
        let &t_SI .= "\<Esc>[6 q"
    endif
endif
" }}}

" supertab {{{
let g:SuperTabDefaultCompletionType = "<c-n>"
" }}}

" toggle_terminal {{{

" set your favorite shell
if has("win32")
    let g:toggle_terminal#command = 'wsl'
else
    let g:toggle_terminal#command = ''
endif

" set terminal window position
" (see possible options at :help vertical)
let g:toggle_terminal#position = 'bo'

" }}}

" mac {{{

" mac下输入法切换问题
if has("mac") && has("gui")
    set noimd
    set imi=2
    set ims=2
endif

" Change cursor shape between insert and normal mode in iTerm2.app
if $TERM_PROGRAM =~ "iTerm"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

" }}}

" alias {{{
command Json set ft=json
command Diff windo difft
command Diffo windo diffo
" }}}

" 主题配置 {{{
if has("mac")
    set guifont=Monaco\ for\ Powerline:h15
else
    set guifont=Consolas\ NF:h12
endif

if has("gui") && $TERM_PROGRAM != "iTerm.app"
    colorscheme one
else
    colorscheme gruvbox
endif

set bg=dark
" }}}
