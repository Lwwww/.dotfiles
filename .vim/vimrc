" vim-plug {{{
call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-surround'
Plug 'Raimondi/delimitMate'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'terryma/vim-multiple-cursors'
Plug 'kana/vim-textobj-user'
Plug 'sgur/vim-textobj-parameter'
Plug 'kana/vim-textobj-entire'
Plug 'mhinz/vim-signify'
Plug 'voldikss/vim-translator'
Plug 'Chiel92/vim-autoformat'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'chr4/nginx.vim'
Plug 'lu5je0/vim-java-bytecode'
Plug 'ervandew/supertab'
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'junegunn/vim-peekaboo'
Plug 'pakutoma/toggle-terminal'
Plug 'elzr/vim-json'
Plug 'terryma/vim-expand-region'
Plug 'machakann/vim-highlightedyank'
Plug 'tommcdo/vim-exchange'
Plug 'Konfekt/FastFold'

" Plug 'neoclide/coc.nvim', {'branch': 'release'}
" 自动弹出pop
" Plug 'vim-scripts/AutoComplPop'

" snipmate
Plug 'garbas/vim-snipmate'
Plug 'honza/vim-snippets'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'

" themes
Plug 'rakr/vim-one'
Plug 'morhetz/gruvbox'

call plug#end()
" }}}

" runtime 加载.vim {{{
runtime foldtext.vim
if has("win32")
    runtime escalt.vim
endif
runtime gvim.vim
" }}}

" 常规设置 {{{
set mouse=a
set hlsearch " 高亮搜索结果
set ignorecase " 搜索时忽略大小写
set incsearch " 每输入一个字符就跳转到对应的结果
set noerrorbells " 关闭错误响声
set clipboard+=unnamed " 使用系统剪切板
set splitbelow " 默认在下侧分屏
set splitright " 默认在右侧分屏
set t_Co=256 " 开启256颜色支持
set nowrap " 默认不启用拆行
set autoindent
set number

set tabstop=4
set shiftwidth=4
set softtabstop=4

set expandtab
set encoding=utf8
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,gbk,utf-16,big5,gb18030,ISO-8859,latin1
syntax on
set foldmethod=syntax
set foldlevelstart=99 " 打开文件默认不折叠
set termguicolors

" make the backspace work like in most other programs
set backspace=indent,eol,start
" }}}

" autocmd {{{
autocmd FileType vim setlocal foldmethod=marker
autocmd FileType json,xml,html setlocal tabstop=2 | setlocal shiftwidth=2 | setlocal softtabstop=2
" }}}

" vim-expand-region {{{
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)
" }}}

" airline {{{
" tab显示
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#show_splits = 0       " disables the buffer name that displays on the right of the tabline
let g:airline#extensions#tabline#show_tabs = 1
let g:airline#extensions#tabline#show_tab_nr = 1
let g:airline#extensions#tabline#show_tab_count = 0
let g:airline#extensions#tabline#tab_min_count = 2
let g:airline#extensions#tabline#show_tab_type = 0     " disables the weird ornage arrow on the tabline
let g:airline#extensions#tabline#show_close_button = 0

let g:airline_powerline_fonts=1

" 隐藏箭头
" let g:airline_left_sep = ''
" let g:airline_left_sep = ''
" let g:airline_right_sep = ''
" let g:airline_right_sep = ''
"
" }}}

" vim-json {{{
let g:vim_json_syntax_conceal = 0
" }}}

" vim-signify {{{
set updatetime=1000 " 设置vim更新时间，主要用于更新gitgutter
" }}}

" vim-textobj-parameter {{{
let g:vim_textobj_parameter_mapping = 'a'
" }}}

" delimitMate {{{
let g:delimitMate_expand_cr=1
" }}}

" supertab {{{
let g:SuperTabDefaultCompletionType = "<c-n>"
" }}}

" toggle_terminal {{{

" highlightedyank {{{
let g:highlightedyank_highlight_duration=300
" }}}

" set your favorite shell
if has("win32")
    let g:toggle_terminal#command = 'wsl'
else
    let g:toggle_terminal#command = ''
endif

" set terminal window position
" (see possible options at :help vertical)
let g:toggle_terminal#position = 'bo'

" }}}

" FastFold {{{
let g:markdown_folding = 1
let g:tex_fold_enabled = 1
let g:vimsyn_folding = 'af'
let g:xml_syntax_folding = 1
let g:javaScript_fold = 1
let g:sh_fold_enabled= 7
let g:ruby_fold = 1
let g:perl_fold = 1
let g:perl_fold_blocks = 1
let g:r_syntax_folding = 1
let g:rust_fold = 1
let g:php_folding = 1
" }}}

" mac {{{

" mac下输入法切换问题
if has("mac") && has("gui")
    set noimd
    set imi=2
    set ims=2
endif

" 光标设置
" Change cursor shape between insert and normal mode in iTerm2.app
if $TERM_PROGRAM =~ "iTerm"
    let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
    let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode
endif

" }}}

" Windows {{{
if has("win32")
    let g:python3_host_prog = $HOME . "/AppData/Local/Programs/Python/Python38/python.exe"
endif

" 光标设置
if has("win32")
    if &term =~ '^xterm'
        " normal mode
        let &t_EI .= "\<Esc>[8 q"
        " insert mode
        let &t_SI .= "\<Esc>[6 q"
    endif
endif
" }}}

" alias {{{
command Json set ft=json
command Diff windo difft
command Diffo windo diffo
" }}}

" 主题配置 {{{
if has("mac")
    set guifont=Monaco\ for\ Powerline:h15
else
    set guifont=Consolas\ NF:h12
endif

colorscheme one
set bg=dark
" }}}

" 按键映射 {{{
let mapleader=","

" vimrc
nnoremap <leader>vim :tabnew $MYVIMRC<cr>
nnoremap <leader>sou :source $MYVIMRC<cr>

" tab switch
map <leader>tn :tabnew<cr>
nnoremap <silent> <leader>th :tabprev<cr>
nnoremap <silent> <leader>tl :tabnext<cr>
nnoremap <silent> <leader>e :NERDTreeToggle<CR>
nnoremap <silent> <leader>1 1gt
nnoremap <silent> <leader>2 2gt
nnoremap <silent> <leader>3 3gt
nnoremap <silent> <leader>4 4gt
nnoremap <silent> <leader>5 5gt
nnoremap <silent> <leader>6 6gt
nnoremap <silent> <leader>7 7gt
nnoremap <silent> <leader>8 8gt
nnoremap <silent> <leader>9 9gt

if has("win32")
    " 为了支持win+v
    imap <C-v> <ESC>"+gpa
    nmap <C-v> "+gpa
endif

" ctrl-c 复制
vnoremap <C-c> y

" 缩进后重新选择
vmap < <gv
vmap > >gv

imap <M-j> <down>
imap <M-k> <up>
imap <M-h> <left>
imap <M-l> <right>

" 另存为
if has("gui_running")
    map <silent> <C-S> :brow saveas<CR>
    imap <silent> <C-S> <ESC>:brow saveas<CR>a
endif

map <silent> <F10> :set wrap!<CR>
imap <silent> <F10> <ESC>:set wrap!<CR>

" 快速切换窗口
" normal
nmap <silent> <M-J> <C-w>j
nmap <silent> <M-K> <C-w>k
nmap <silent> <M-H> <C-w>h
nmap <silent> <M-L> <C-w>l

nmap <silent> <D-J> <C-w>j
nmap <silent> <D-K> <C-w>k
nmap <silent> <D-H> <C-w>h
nmap <silent> <D-L> <C-w>l

" ins<silent>ert
imap <silent> <M-J> <ESC><C-w>j
imap <silent> <M-K> <ESC><C-w>k
imap <silent> <M-H> <ESC><C-w>h
imap <silent> <M-L> <ESC><C-w>l

imap <silent> <D-J> <ESC><C-w>j
imap <silent> <D-K> <ESC><C-w>k
imap <silent> <D-H> <ESC><C-w>h
imap <silent> <D-L> <ESC><C-w>l

" ter<silent>minal
tmap <silent> <D-J> <C-w>j
tmap <silent> <D-K> <C-w>k
tmap <silent> <D-H> <C-w>h
tmap <silent> <D-L> <C-w>l

" terminal-toggle
" windows
tnoremap <silent> <f8> <C-w>:ToggleTerminal<CR>
nnoremap <silent> <f8> :ToggleTerminal<CR>
inoremap <silent> <f8> <ESC>:ToggleTerminal<CR>

" mac
tnoremap <silent> <f8> <C-w>:ToggleTerminal<CR>
nnoremap <silent> <f8> :ToggleTerminal<CR>
inoremap <silent> <f8> <ESC>:ToggleTerminal<CR>

" vim-translator
" Echo translation in the cmdline
nmap <silent> <Leader>w <Plug>Translate
vmap <silent> <Leader>w <Plug>TranslateV
" Display translation in a window
nmap <silent> <Leader>s <Plug>TranslateW
vmap <silent> <Leader>s <Plug>TranslateWV
nmap <silent> <m-s> <Plug>TranslateW
vmap <silent> <m-s> <Plug>TranslateWV
" Replace the text with translation
" nmap <silent> <Leader>r <Plug>TranslateR
" vmap <silent> <Leader>r <Plug>TranslateRV
" }}}
