" vim-plug {{{
call plug#begin('~/.vim/plugged')

Plug 'tpope/vim-surround'
Plug 'Raimondi/delimitMate'

" Plug 'jistr/vim-nerdtree-tabs', {'on': 'NERDTreeTabsToggle'}
" Plug 'preservim/nerdtree'

Plug 'lambdalisue/fern.vim'
Plug 'lu5je0/fern-renderer-nerdfont.vim'
Plug 'lambdalisue/nerdfont.vim'
Plug 'lambdalisue/fern-hijack.vim'
Plug 'lambdalisue/glyph-palette.vim'

" if has('nvim')
"   Plug 'Shougo/defx.nvim', { 'do': ':UpdateRemotePlugins' }
" else
"   Plug 'Shougo/defx.nvim'
"   Plug 'roxma/nvim-yarp'
"   Plug 'roxma/vim-hug-neovim-rpc'
" endif
" Plug 'kristijanhusak/defx-icons'

Plug 'yianwillis/vimcdoc'
Plug 'tpope/vim-commentary'
Plug 'mg979/vim-visual-multi'
Plug 'kana/vim-textobj-user'
Plug 'sgur/vim-textobj-parameter'
Plug 'kana/vim-textobj-entire'
Plug 'mhinz/vim-signify'
Plug 'voldikss/vim-translator'
Plug 'Chiel92/vim-autoformat'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'chr4/nginx.vim'
Plug 'lu5je0/vim-java-bytecode'
" Plug 'ervandew/supertab'
Plug 'vim-scripts/ReplaceWithRegister'
" Peekaboo extends " and @ in normal mode and <CTRL-R> in insert mode so you can see the contents of the registers.
Plug 'junegunn/vim-peekaboo'
Plug 'lu5je0/vim-terminal-help'
Plug 'skywind3000/asynctasks.vim'
Plug 'skywind3000/asyncrun.vim'
Plug 'elzr/vim-json'
Plug 'terryma/vim-expand-region'
Plug 'machakann/vim-highlightedyank'
Plug 'tommcdo/vim-exchange'
Plug 'Konfekt/FastFold'
Plug 'mbbill/undotree'
Plug 'liuchengxu/vim-which-key'
Plug 'lu5je0/vim-base64'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}
" save with sudo
Plug 'lambdalisue/suda.vim'
if !has("gui")
    Plug 'brglng/vim-im-select'
endif
Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }

" 变量命名转换
Plug 'chiedo/vim-case-convert'

" Plug 'lilydjwg/colorizer'

" Plug 'itchyny/lightline.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" 自动弹出pop
" Plug 'vim-scripts/AutoComplPop'

" snipmate
" Plug 'garbas/vim-snipmate'
" Plug 'honza/vim-snippets'
" Plug 'MarcWeber/vim-addon-mw-utils'
" Plug 'tomtom/tlib_vim'

" themes
Plug 'rakr/vim-one'
Plug 'gruvbox-community/gruvbox'

call plug#end()
" }}}

" runtime 加载.vim {{{
runtime settings.vim
runtime foldtext.vim
if has("win32")
    runtime escalt.vim
endif
runtime gvim.vim
runtime functions.vim
runtime plug-config/fern.vim
" runtime plug-config/nerdtree.vim
" runtime plug-config/defx.vim
runtime plug-config/leaderf.vim
runtime plug-config/autoformat.vim
runtime plug-config/terminal.vim
runtime plug-config/airline.vim
runtime plug-config/coc.vim
" runtime plug-config/lightline.vim
" }}}

" autocmd {{{
autocmd FileType vim setlocal foldmethod=marker
autocmd FileType json,xml,html,yaml setlocal tabstop=2 | setlocal shiftwidth=2 | setlocal softtabstop=2

" 超过最大的文件大小后禁用语法高亮
augroup LargeFile
    " MB
    let g:LargeFile = 10
    autocmd BufReadPre * let f=getfsize(expand("<afile>")) | if f > g:LargeFile * 1024 * 1024 || f == -2 | call LargeFile() | endif
augroup END

" }}}

" vim-expand-region {{{
vmap v <Plug>(expand_region_expand)
vmap V <Plug>(expand_region_shrink)
" }}}

" vim-json {{{
let g:vim_json_syntax_conceal = 0
" }}}

" vim-signify {{{
set updatetime=1000 " 设置vim更新时间，主要用于更新gitgutter
" }}}

" vim-textobj-parameter {{{
let g:vim_textobj_parameter_mapping = 'a'
" }}}

" delimitMate {{{
let g:delimitMate_expand_cr=1
" }}}

" supertab {{{
let g:SuperTabDefaultCompletionType = "<c-n>"
" }}}

" highlightedyank {{{
let g:highlightedyank_highlight_duration=300
" }}}

" toggle_terminal {{{

" set your favorite shell
if has("win32")
    let g:toggle_terminal#command = 'wsl'
else
    let g:toggle_terminal#command = ''
endif

" set terminal window position
" (see possible options at :help vertical)
let g:toggle_terminal#position = 'bo'

" }}}

" undotree {{{
let g:undotree_WindowLayout = 3
let g:undotree_SetFocusWhenToggle = 1
" }}}

" FastFold {{{
let g:markdown_folding = 1
let g:tex_fold_enabled = 1
let g:vimsyn_folding = 'af'
let g:xml_syntax_folding = 1
let g:javaScript_fold = 1
let g:sh_fold_enabled= 7
let g:ruby_fold = 1
let g:perl_fold = 1
let g:perl_fold_blocks = 1
let g:r_syntax_folding = 1
let g:rust_fold = 1
let g:php_folding = 1
" }}}

" Windows {{{
if has("win32")
    let g:python3_host_prog = $HOME . "/AppData/Local/Programs/Python/Python38/python.exe"
endif

" alias {{{
command! Json set ft=json
command! Jp set ft=jproperties
command! Diff windo difft
command! Diffo windo diffo
" }}}

" 主题配置 {{{
colorscheme one
set bg=dark
" }}}

runtime mappings.vim
runtime im.vim
runtime whichkey.vim
